plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.minecraftforge.licenser' version '1.0.1'
    id 'net.minecraftforge.gradleutils' version '2.3.6'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net/' }
}

group = 'net.minecraftforge'

version = gradleutils.tagOffsetVersion
println('Version: ' + version)

dependencies {
    implementation libs.jopt
    implementation libs.gson
    implementation libs.jver
    implementation libs.srgutils
    implementation libs.diff
}

license {
    header project.file('LICENSE-header.txt')
    newLine false
    exclude '**/ComparableVersion.java' // Apache class used as source-level dep as to not need the hundred+ other classes the library pulls in
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
    withSourcesJar()
}

jar {
    manifest {
        attributes([
            'Main-Class': 'net.minecraftforge.mcmaven.Main'
        ] as LinkedHashMap)
        attributes([
            'Specification-Title':   'Minecraft Maven',
            'Specification-Vendor':  'Forge Development LLC',
            'Specification-Version':  gradleutils.gitInfo.tag,
            'Implementation-Title':  'Minecraft Maven',
            'Implementation-Vendor': 'Forge Development LLC',
            'Implementation-Version': project.version
        ] as LinkedHashMap, 'net/minecraftforge/mcmaven/')
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

changelog {
    from '1.0'
}

publishing {
    publications.register('mavenJava', MavenPublication).configure {
        artifactId = project.name
        from components.java

        pom {
            name = project.name
            description = 'Minecraft Maven Repo Generator'
            url = 'https://github.com/MinecraftForge/minecraft-maven'

            gradleutils.pom.setGitHubDetails(pom, 'minecraft-maven')

            license gradleutils.pom.licenses.LGPLv2_1

            developers {
                developer gradleutils.pom.Developers.LexManos
            }
        }
    }
    repositories {
        maven gradleutils.publishingForgeMaven
    }
}
