import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    alias libs.plugins.licenser
    alias libs.plugins.gradleutils
    alias libs.plugins.shadow

    alias libs.plugins.extraJavaModuleInfo
}

final projectDisplayName = 'Minecraft Mavenizer'
final projectVendor = 'Forge Development LLC'
description = 'A pure-blooded Java tool to generate a maven repository for Minecraft artifacts.'
group = 'net.minecraftforge'
version = gitversion.tagOffset

println "Version: $version"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

extraJavaModuleInfo {
    failOnMissingModuleInfo = false

    automaticModule libs.diff, 'io.codechicken.diffpatch'
    automaticModule libs.srgutils, 'net.minecraftforge.srgutils'
}

dependencies {
    implementation libs.jopt
    implementation libs.gson
    implementation libs.jver
    implementation libs.srgutils
    implementation libs.diff

    implementation libs.fastcsv
    implementation libs.commonsio

    implementation libs.utils.files
    implementation libs.utils.download
    implementation libs.utils.hash
    implementation libs.utils.data
    implementation libs.utils.logging

    // Static Analysis
    compileOnly libs.nulls
}

license {
    header = project.file('LICENSE-header.txt')
    newLine false
    exclude '**/ComparableVersion.java' // Apache class used as source-level dep as to not need the hundred+ other classes the library pulls in
}

tasks.named('jar', Jar) {
    archiveClassifier = 'slim'
    exclude 'net/minecraftforge/mcmaven/cli/**'
}

tasks.named('shadowJar', ShadowJar) {
    manifest {
        attributes([
            'Main-Class': 'net.minecraftforge.mcmaven.cli.Main'
        ])
        attributes([
            'Specification-Title'   : projectDisplayName,
            'Specification-Vendor'  : projectVendor,
            'Specification-Version' : gitversion.info.tag,
            'Implementation-Title'  : projectDisplayName,
            'Implementation-Vendor' : projectVendor,
            'Implementation-Version': project.version
        ], 'net/minecraftforge/mcmaven/cli')
    }

    archiveClassifier = ''
    minimize {
        exclude(dependency(libs.jver.get()))
    }
}

artifacts {
    archives shadowJar
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

changelog {
    fromBase()
    publishAll = false
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.shadow
        artifact jar

        artifactId = project.name
        changelog.publish it

        pom { pom ->
            name = projectDisplayName
            description = project.description

            gradleutils.pom.setGitHubDetails pom

            license gradleutils.pom.licenses.LGPLv2_1

            developers {
                developer gradleutils.pom.developers.LexManos
                developer gradleutils.pom.developers.Jonathing
            }
        }
    }

    repositories {
        maven gradleutils.publishingForgeMaven
    }
}

idea.module { downloadSources = downloadJavadoc = true }
