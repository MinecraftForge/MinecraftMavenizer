import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    alias libs.plugins.gradleutils
    alias libs.plugins.gitversion
    alias libs.plugins.changelog
    alias libs.plugins.licenser
    alias libs.plugins.shadow
}

gradleutils.displayName = 'Minecraft Mavenizer'
description = 'A pure-blooded Java tool to generate a maven repository for Minecraft artifacts.'
group = 'net.minecraftforge'
version = gitversion.tagOffset

println "Version: $version"

// TODO [Mavenizer] Update to Java 25 once ForgeGradle and ForgeDev target Gradle 9.1.0
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

dependencies {
    compileOnly libs.nulls

    implementation libs.jopt
    implementation libs.gson
    implementation libs.jver
    implementation libs.srgutils
    implementation libs.diff

    implementation libs.fastcsv
    implementation libs.commonsio

    implementation libs.bundles.utils
}

license {
    header = rootProject.file('LICENSE-header.txt')
    newLine false
    exclude '**/ComparableVersion.java' // Apache class used as source-level dep as to not need the hundred+ other classes the library pulls in
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
            'Main-Class'           : 'net.minecraftforge.mcmaven.cli.Main',
            'Automatic-Module-Name': 'net.minecraftforge.mavenizer'
        ])

        gradleutils.manifestDefaults(it, 'net/minecraftforge/mcmaven/cli/')
    }

    archiveClassifier = 'slim'
}

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = ''

    minimize {
        exclude(dependency(libs.jver))
    }
}

changelog {
    fromBase()
}

publishing {
    repositories {
        maven gradleutils.publishingForgeMaven
    }

    publications.register('mavenJava', MavenPublication) {
        from components.shadow

        changelog.publish(it)
        gradleutils.promote(it)

        pom { pom ->
            name = gradleutils.displayName
            description = project.description

            gradleutils.pom.addRemoteDetails(pom)

            licenses {
                license gradleutils.pom.licenses.LGPLv2_1
            }

            developers {
                developer gradleutils.pom.developers.LexManos
                developer gradleutils.pom.developers.Jonathing
            }
        }
    }
}
